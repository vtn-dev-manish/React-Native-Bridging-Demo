{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"fbjs/lib/areEqual","data":{"isAsync":false}},{"name":"./RNGestureHandlerModule","data":{"isAsync":false}},{"name":"./State","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[8], \"react-native\");\n\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"fbjs/lib/areEqual\"));\n\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./RNGestureHandlerModule\"));\n\n  var _State = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./State\"));\n\n  var _stateToPropMappings;\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') return node;\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n\n  var _NativeModules$UIMana = _reactNative.NativeModules.UIManager,\n      UIManager = _NativeModules$UIMana === void 0 ? {} : _NativeModules$UIMana;\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  UIManager.genericDirectEventTypes = _objectSpread({}, UIManager.genericDirectEventTypes, {}, customGHEventsConfig);\n\n  if (UIManager.getConstants) {\n    UIManager.getConstants().genericDirectEventTypes = _objectSpread({}, UIManager.getConstants().genericDirectEventTypes, {}, customGHEventsConfig);\n  }\n\n  var _UIManager$setJSRespo = UIManager.setJSResponder,\n      oldSetJSResponder = _UIManager$setJSRespo === void 0 ? function () {} : _UIManager$setJSRespo,\n      _UIManager$clearJSRes = UIManager.clearJSResponder,\n      oldClearJSResponder = _UIManager$clearJSRes === void 0 ? function () {} : _UIManager$clearJSRes;\n\n  UIManager.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n\n  UIManager.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n\n    oldClearJSResponder();\n  };\n\n  var handlerTag = 1;\n  var handlerIDToTag = {};\n\n  function isConfigParam(param, name) {\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var res = _objectSpread({}, defaults);\n\n    Object.keys(validProps).forEach(function (key) {\n      var value = props[key];\n\n      if (isConfigParam(value, key)) {\n        var _value = props[key];\n\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          _value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop') {\n          if (typeof _value !== 'object') {\n            _value = {\n              top: _value,\n              left: _value,\n              bottom: _value,\n              right: _value\n            };\n          }\n        }\n\n        res[key] = _value;\n      }\n    });\n    return res;\n  }\n\n  function transformIntoHandlerTags(handlerIDs) {\n    if (!Array.isArray(handlerIDs)) {\n      handlerIDs = [handlerIDs];\n    }\n\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(function (_ref) {\n        var current = _ref.current;\n        return current;\n      }).filter(function (handle) {\n        return handle;\n      });\n    }\n\n    return handlerIDs.map(function (handlerID) {\n      return handlerIDToTag[handlerID] || handlerID.current && handlerID.current._handlerTag || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n\n  function hasUnresolvedRefs(props) {\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n\n  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _State.default.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.END, 'onEnded'), _stateToPropMappings);\n\n  function createHandler(handlerName) {\n    var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var transformProps = arguments.length > 3 ? arguments[3] : undefined;\n    var customNativeProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    var Handler = function (_React$Component) {\n      (0, _inherits2.default)(Handler, _React$Component);\n\n      function Handler(props) {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Handler).call(this, props));\n\n        _this._onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onGestureEvent && _this.props.onGestureEvent(event);\n          } else {\n            _this.props.onGestureHandlerEvent && _this.props.onGestureHandlerEvent(event);\n          }\n        };\n\n        _this._onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(event);\n            var stateEventName = stateToPropMappings[event.nativeEvent.state];\n\n            if (typeof _this.props[stateEventName] === 'function') {\n              _this.props[stateEventName](event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange && _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n\n        _this._refHandler = function (node) {\n          _this._viewNode = node;\n\n          var child = _react.default.Children.only(_this.props.children);\n\n          var ref = child.ref;\n\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n\n        _this._createGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.createGestureHandler(handlerName, _this._handlerTag, newConfig);\n        };\n\n        _this._attachGestureHandler = function (newViewTag) {\n          _this._viewTag = newViewTag;\n\n          _RNGestureHandlerModule.default.attachGestureHandler(_this._handlerTag, newViewTag);\n        };\n\n        _this._updateGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.updateGestureHandler(_this._handlerTag, newConfig);\n        };\n\n        _this._handlerTag = handlerTag++;\n        _this._config = {};\n\n        if (props.id) {\n          if (handlerIDToTag[props.id] !== undefined) {\n            throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n          }\n\n          handlerIDToTag[props.id] = _this._handlerTag;\n        }\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Handler, [{\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          _RNGestureHandlerModule.default.dropGestureHandler(this._handlerTag);\n\n          if (this._updateEnqueued) {\n            clearImmediate(this._updateEnqueued);\n          }\n\n          if (this.props.id) {\n            delete handlerIDToTag[this.props.id];\n          }\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          if (hasUnresolvedRefs(this.props)) {\n            this._updateEnqueued = setImmediate(function () {\n              _this2._updateEnqueued = null;\n\n              _this2._update();\n            });\n          }\n\n          this._createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config));\n\n          this._attachGestureHandler(findNodeHandle(this._viewNode));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = findNodeHandle(this._viewNode);\n\n          if (this._viewTag !== viewTag) {\n            this._attachGestureHandler(viewTag);\n          }\n\n          this._update();\n        }\n      }, {\n        key: \"_update\",\n        value: function _update() {\n          var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config);\n\n          if (!(0, _areEqual.default)(this._config, newConfig)) {\n            this._updateGestureHandler(newConfig);\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = _objectSpread({}, this.props, {}, updates);\n\n          var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config);\n\n          this._updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this._onGestureHandlerEvent;\n          var _this$props = this.props,\n              onGestureEvent = _this$props.onGestureEvent,\n              onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureEventHandler = this.props.onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var gestureStateEventHandler = this._onGestureHandlerStateChange;\n          var _this$props2 = this.props,\n              onHandlerStateChange = _this$props2.onHandlerStateChange,\n              onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureStateEventHandler = this.props.onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var child = _react.default.Children.only(this.props.children);\n\n          var grandChildren = child.props.children;\n\n          if (_reactNative.Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = _react.default.Children.toArray(grandChildren);\n            grandChildren.push(_reactNative.Touchable.renderDebugView({\n              color: 'mediumspringgreen',\n              hitSlop: child.props.hitSlop\n            }));\n          }\n\n          return _react.default.cloneElement(child, {\n            ref: this._refHandler,\n            collapsable: false,\n            onGestureHandlerEvent: gestureEventHandler,\n            onGestureHandlerStateChange: gestureStateEventHandler\n          }, grandChildren);\n        }\n      }]);\n      return Handler;\n    }(_react.default.Component);\n\n    Handler.displayName = handlerName;\n    Handler.propTypes = propTypes;\n    return Handler;\n  }\n});","lineCount":356,"map":[[21,0,1,0],[23,0,2,0],[25,0,8,0],[27,0,9,0],[29,0,10,0],[37,0,12,0],[37,11,12,9,"findNodeHandle"],[37,25,12,0],[37,26,12,24,"node"],[37,30,12,0],[37,32,12,30],[38,0,13,2],[38,8,13,6,"Platform"],[38,30,13,15,"OS"],[38,32,13,6],[38,37,13,22],[38,42,13,2],[38,44,13,29],[38,51,13,36,"node"],[38,55,13,29],[39,0,14,2],[39,11,14,9],[39,44,14,26,"node"],[39,48,14,9],[39,49,14,2],[40,0,15,1],[42,30,17,27,"NativeModules"],[42,56],[42,57,17,8,"UIManager"],[42,66],[43,6,17,8,"UIManager"],[43,15],[43,53,17,20],[43,55],[44,0,19,0],[44,6,19,6,"customGHEventsConfig"],[44,26,19,26],[44,29,19,29],[45,0,20,2,"onGestureHandlerEvent"],[45,4,20,2,"onGestureHandlerEvent"],[45,25,20,23],[45,27,20,25],[46,0,20,27,"registrationName"],[46,6,20,27,"registrationName"],[46,22,20,43],[46,24,20,45],[47,0,20,25],[47,5,19,29],[48,0,21,2,"onGestureHandlerStateChange"],[48,4,21,2,"onGestureHandlerStateChange"],[48,31,21,29],[48,33,21,31],[49,0,22,4,"registrationName"],[49,6,22,4,"registrationName"],[49,22,22,20],[49,24,22,22],[50,0,21,31],[51,0,19,29],[51,3,19,0],[52,0,30,0,"UIManager"],[52,2,30,0,"UIManager"],[52,11,30,9],[52,12,30,10,"genericDirectEventTypes"],[52,35,30,0],[52,56,31,5,"UIManager"],[52,65,31,14],[52,66,31,15,"genericDirectEventTypes"],[52,89,30,0],[52,95,32,5,"customGHEventsConfig"],[52,115,30,0],[54,0,37,0],[54,6,37,4,"UIManager"],[54,15,37,13],[54,16,37,14,"getConstants"],[54,28,37,0],[54,30,37,28],[55,0,38,2,"UIManager"],[55,4,38,2,"UIManager"],[55,13,38,11],[55,14,38,12,"getConstants"],[55,26,38,2],[55,29,38,27,"genericDirectEventTypes"],[55,52,38,2],[55,73,39,7,"UIManager"],[55,82,39,16],[55,83,39,17,"getConstants"],[55,95,39,7],[55,98,39,32,"genericDirectEventTypes"],[55,121,38,2],[55,127,40,7,"customGHEventsConfig"],[55,147,38,2],[56,0,42,1],[58,30,48,4,"UIManager"],[58,39],[58,40,46,2,"setJSResponder"],[58,54],[59,6,46,18,"oldSetJSResponder"],[59,23],[59,61,46,38],[59,73,46,44],[59,74,46,46],[59,75],[60,30,48,4,"UIManager"],[60,39],[60,40,47,2,"clearJSResponder"],[60,56],[61,6,47,20,"oldClearJSResponder"],[61,25],[61,63,47,42],[61,75,47,48],[61,76,47,50],[61,77],[63,0,49,0,"UIManager"],[63,2,49,0,"UIManager"],[63,11,49,9],[63,12,49,10,"setJSResponder"],[63,26,49,0],[63,29,49,27],[63,39,49,28,"tag"],[63,42,49,27],[63,44,49,33,"blockNativeResponder"],[63,64,49,27],[63,66,49,58],[64,0,50,2,"RNGestureHandlerModule"],[64,36,50,25,"handleSetJSResponder"],[64,56,50,2],[64,57,50,46,"tag"],[64,60,50,2],[64,62,50,51,"blockNativeResponder"],[64,82,50,2],[66,0,51,2,"oldSetJSResponder"],[66,4,51,2,"oldSetJSResponder"],[66,21,51,19],[66,22,51,20,"tag"],[66,25,51,19],[66,27,51,25,"blockNativeResponder"],[66,47,51,19],[66,48,51,2],[67,0,52,1],[67,3,49,0],[69,0,53,0,"UIManager"],[69,2,53,0,"UIManager"],[69,11,53,9],[69,12,53,10,"clearJSResponder"],[69,28,53,0],[69,31,53,29],[69,43,53,35],[70,0,54,2,"RNGestureHandlerModule"],[70,36,54,25,"handleClearJSResponder"],[70,58,54,2],[72,0,55,2,"oldClearJSResponder"],[72,4,55,2,"oldClearJSResponder"],[72,23,55,21],[73,0,56,1],[73,3,53,0],[75,0,58,0],[75,6,58,4,"handlerTag"],[75,16,58,14],[75,19,58,17],[75,20,58,0],[76,0,59,0],[76,6,59,6,"handlerIDToTag"],[76,20,59,20],[76,23,59,23],[76,25,59,0],[78,0,61,0],[78,11,61,9,"isConfigParam"],[78,24,61,0],[78,25,61,23,"param"],[78,30,61,0],[78,32,61,30,"name"],[78,36,61,0],[78,38,61,36],[79,0,64,2],[79,11,65,4,"param"],[79,16,65,9],[79,21,65,14,"undefined"],[79,30,65,4],[79,35,66,5,"param"],[79,40,66,10],[79,45,66,15,"Object"],[79,51,66,21],[79,52,66,22,"param"],[79,57,66,21],[79,58,66,5],[79,62,66,32],[79,64,66,34],[79,80,66,50,"param"],[79,85,66,32],[79,86,65,4],[79,91,67,4,"name"],[79,95,67,8],[79,100,67,13],[79,122,65,4],[79,126,68,4,"name"],[79,130,68,8],[79,135,68,13],[79,151,64,2],[80,0,70,1],[82,0,72,0],[82,11,72,9,"filterConfig"],[82,23,72,0],[82,24,72,22,"props"],[82,29,72,0],[82,31,72,29,"validProps"],[82,41,72,0],[82,43,72,56],[83,0,72,56],[83,8,72,41,"defaults"],[83,16,72,56],[83,87,72,52],[83,89,72,56],[85,0,73,2],[85,8,73,8,"res"],[85,11,73,11],[85,32,73,19,"defaults"],[85,40,73,11],[85,41,73,2],[87,0,74,2,"Object"],[87,4,74,2,"Object"],[87,10,74,8],[87,11,74,9,"keys"],[87,15,74,2],[87,16,74,14,"validProps"],[87,26,74,2],[87,28,74,26,"forEach"],[87,35,74,2],[87,36,74,34],[87,46,74,34,"key"],[87,49,74,37],[87,51,74,41],[88,0,75,4],[88,10,75,10,"value"],[88,15,75,15],[88,18,75,18,"props"],[88,23,75,23],[88,24,75,24,"key"],[88,27,75,23],[88,28,75,4],[90,0,76,4],[90,10,76,8,"isConfigParam"],[90,23,76,21],[90,24,76,22,"value"],[90,29,76,21],[90,31,76,29,"key"],[90,34,76,21],[90,35,76,4],[90,37,76,35],[91,0,77,6],[91,12,77,10,"value"],[91,18,77,15],[91,21,77,18,"props"],[91,26,77,23],[91,27,77,24,"key"],[91,30,77,23],[91,31,77,6],[93,0,78,6],[93,12,78,10,"key"],[93,15,78,13],[93,20,78,18],[93,42,78,10],[93,46,78,44,"key"],[93,49,78,47],[93,54,78,52],[93,63,78,6],[93,65,78,63],[94,0,79,8,"value"],[94,10,79,8,"value"],[94,16,79,13],[94,19,79,16,"transformIntoHandlerTags"],[94,43,79,40],[94,44,79,41,"props"],[94,49,79,46],[94,50,79,47,"key"],[94,53,79,46],[94,54,79,40],[94,55,79,8],[95,0,80,7],[95,9,78,6],[95,15,80,13],[95,19,80,17,"key"],[95,22,80,20],[95,27,80,25],[95,36,80,13],[95,38,80,36],[96,0,81,8],[96,14,81,12],[96,21,81,19,"value"],[96,27,81,12],[96,32,81,29],[96,40,81,8],[96,42,81,39],[97,0,82,10,"value"],[97,12,82,10,"value"],[97,18,82,15],[97,21,82,18],[98,0,82,20,"top"],[98,14,82,20,"top"],[98,17,82,23],[98,19,82,25,"value"],[98,25,82,18],[99,0,82,32,"left"],[99,14,82,32,"left"],[99,18,82,36],[99,20,82,38,"value"],[99,26,82,18],[100,0,82,45,"bottom"],[100,14,82,45,"bottom"],[100,20,82,51],[100,22,82,53,"value"],[100,28,82,18],[101,0,82,60,"right"],[101,14,82,60,"right"],[101,19,82,65],[101,21,82,67,"value"],[102,0,82,18],[102,13,82,10],[103,0,83,9],[104,0,84,7],[106,0,85,6,"res"],[106,8,85,6,"res"],[106,11,85,9],[106,12,85,10,"key"],[106,15,85,9],[106,16,85,6],[106,19,85,17,"value"],[106,25,85,6],[107,0,86,5],[108,0,87,3],[108,5,74,2],[109,0,88,2],[109,11,88,9,"res"],[109,14,88,2],[110,0,89,1],[112,0,91,0],[112,11,91,9,"transformIntoHandlerTags"],[112,35,91,0],[112,36,91,34,"handlerIDs"],[112,46,91,0],[112,48,91,46],[113,0,92,2],[113,8,92,6],[113,9,92,7,"Array"],[113,14,92,12],[113,15,92,13,"isArray"],[113,22,92,7],[113,23,92,21,"handlerIDs"],[113,33,92,7],[113,34,92,2],[113,36,92,34],[114,0,93,4,"handlerIDs"],[114,6,93,4,"handlerIDs"],[114,16,93,14],[114,19,93,17],[114,20,93,18,"handlerIDs"],[114,30,93,17],[114,31,93,4],[115,0,94,3],[117,0,96,2],[117,8,96,6,"Platform"],[117,30,96,15,"OS"],[117,32,96,6],[117,37,96,22],[117,42,96,2],[117,44,96,29],[118,0,97,4],[118,13,97,11,"handlerIDs"],[118,23,97,21],[118,24,97,22,"map"],[118,27,97,11],[118,28,97,26],[119,0,97,26],[119,12,97,29,"current"],[119,19,97,26],[119,27,97,29,"current"],[119,34,97,26],[120,0,97,26],[120,15,97,43,"current"],[120,22,97,26],[121,0,97,26],[121,7,97,11],[121,9,97,52,"filter"],[121,15,97,11],[121,16,97,59],[121,26,97,59,"handle"],[121,32,97,65],[122,0,97,65],[122,15,97,69,"handle"],[122,21,97,65],[123,0,97,65],[123,7,97,11],[123,8,97,4],[124,0,98,3],[126,0,100,2],[126,11,100,9,"handlerIDs"],[126,21,100,19],[126,22,101,5,"map"],[126,25,100,9],[126,26,102,6],[126,36,102,6,"handlerID"],[126,45,102,15],[127,0,102,15],[127,13,103,8,"handlerIDToTag"],[127,27,103,22],[127,28,103,23,"handlerID"],[127,37,103,22],[127,38,103,8],[127,42,104,9,"handlerID"],[127,51,104,18],[127,52,104,19,"current"],[127,59,104,9],[127,63,104,30,"handlerID"],[127,72,104,39],[127,73,104,40,"current"],[127,80,104,30],[127,81,104,48,"_handlerTag"],[127,92,103,8],[127,96,105,8],[127,97,105,9],[127,98,102,15],[128,0,102,15],[128,5,100,9],[128,7,107,5,"filter"],[128,13,100,9],[128,14,107,12],[128,24,107,12,"handlerTag"],[128,34,107,22],[129,0,107,22],[129,13,107,26,"handlerTag"],[129,23,107,36],[129,26,107,39],[129,27,107,22],[130,0,107,22],[130,5,100,9],[130,6,100,2],[131,0,108,1],[133,0,110,0],[133,11,110,9,"hasUnresolvedRefs"],[133,28,110,0],[133,29,110,27,"props"],[133,34,110,0],[133,36,110,34],[134,0,111,2],[134,8,111,8,"extract"],[134,15,111,15],[134,18,111,18],[134,27,111,8,"extract"],[134,34,111,18],[134,35,111,18,"refs"],[134,39,111,22],[134,41,111,26],[135,0,112,4],[135,10,112,8],[135,11,112,9,"Array"],[135,16,112,14],[135,17,112,15,"isArray"],[135,24,112,9],[135,25,112,23,"refs"],[135,29,112,9],[135,30,112,4],[135,32,112,30],[136,0,113,6],[136,15,113,13,"refs"],[136,19,113,17],[136,23,113,21,"refs"],[136,27,113,25],[136,28,113,26,"current"],[136,35,113,21],[136,40,113,38],[136,44,113,6],[137,0,114,5],[139,0,115,4],[139,13,115,11,"refs"],[139,17,115,15],[139,18,115,16,"some"],[139,22,115,11],[139,23,115,21],[139,33,115,21,"r"],[139,34,115,22],[140,0,115,22],[140,15,115,26,"r"],[140,16,115,27],[140,20,115,31,"r"],[140,21,115,32],[140,22,115,33,"current"],[140,29,115,31],[140,34,115,45],[140,38,115,22],[141,0,115,22],[141,7,115,11],[141,8,115,4],[142,0,116,3],[142,5,111,2],[144,0,117,2],[144,11,117,9,"extract"],[144,18,117,16],[144,19,117,17,"props"],[144,24,117,22],[144,25,117,23],[144,47,117,22],[144,48,117,16],[144,49,117,9],[144,53,117,51,"extract"],[144,60,117,58],[144,61,117,59,"props"],[144,66,117,64],[144,67,117,65],[144,76,117,64],[144,77,117,58],[144,78,117,2],[145,0,118,1],[147,0,120,0],[147,6,120,6,"stateToPropMappings"],[147,25,120,25],[147,108,121,3,"State"],[147,123,121,9,"BEGAN"],[147,128,120,25],[147,130,121,17],[147,139,120,25],[147,194,122,3,"State"],[147,209,122,9,"FAILED"],[147,215,120,25],[147,217,122,18],[147,227,120,25],[147,282,123,3,"State"],[147,297,123,9,"CANCELLED"],[147,306,120,25],[147,308,123,21],[147,321,120,25],[147,376,124,3,"State"],[147,391,124,9,"ACTIVE"],[147,397,120,25],[147,399,124,18],[147,412,120,25],[147,467,125,3,"State"],[147,482,125,9,"END"],[147,485,120,25],[147,487,125,15],[147,496,120,25],[147,520,120,0],[149,0,128,15],[149,11,128,24,"createHandler"],[149,24,128,15],[149,25,129,2,"handlerName"],[149,36,128,15],[149,38,134,2],[150,0,134,2],[150,8,130,2,"propTypes"],[150,17,134,2],[150,88,130,14],[150,90,134,2],[151,0,134,2],[151,8,131,2,"config"],[151,14,134,2],[151,85,131,11],[151,87,134,2],[152,0,134,2],[152,8,132,2,"transformProps"],[152,22,134,2],[153,0,134,2],[153,8,133,2,"customNativeProps"],[153,25,134,2],[153,96,133,22],[153,98,134,2],[155,0,134,2],[155,8,135,8,"Handler"],[155,15,134,2],[156,0,134,2],[158,0,140,4],[158,23,140,16,"props"],[158,28,140,4],[158,30,140,23],[159,0,140,23],[161,0,140,23],[162,0,141,6],[162,113,141,12,"props"],[162,118,141,6],[164,0,140,23],[164,14,152,4,"_onGestureHandlerEvent"],[164,36,140,23],[164,39,152,29],[164,49,152,29,"event"],[164,54,152,34],[164,56,152,38],[165,0,153,6],[165,14,153,10,"event"],[165,19,153,15],[165,20,153,16,"nativeEvent"],[165,31,153,10],[165,32,153,28,"handlerTag"],[165,42,153,10],[165,47,153,43],[165,53,153,48,"_handlerTag"],[165,64,153,6],[165,66,153,61],[166,0,154,8],[166,18,154,13,"props"],[166,23,154,8],[166,24,154,19,"onGestureEvent"],[166,38,154,8],[166,42,154,37],[166,48,154,42,"props"],[166,53,154,37],[166,54,154,48,"onGestureEvent"],[166,68,154,37],[166,69,154,63,"event"],[166,74,154,37],[166,75,154,8],[167,0,155,7],[167,11,153,6],[167,17,155,13],[168,0,156,8],[168,18,156,13,"props"],[168,23,156,8],[168,24,156,19,"onGestureHandlerEvent"],[168,45,156,8],[168,49,157,10],[168,55,157,15,"props"],[168,60,157,10],[168,61,157,21,"onGestureHandlerEvent"],[168,82,157,10],[168,83,157,43,"event"],[168,88,157,10],[168,89,156,8],[169,0,158,7],[170,0,159,5],[170,9,140,23],[172,0,140,23],[172,14,161,4,"_onGestureHandlerStateChange"],[172,42,140,23],[172,45,161,35],[172,55,161,35,"event"],[172,60,161,40],[172,62,161,44],[173,0,162,6],[173,14,162,10,"event"],[173,19,162,15],[173,20,162,16,"nativeEvent"],[173,31,162,10],[173,32,162,28,"handlerTag"],[173,42,162,10],[173,47,162,43],[173,53,162,48,"_handlerTag"],[173,64,162,6],[173,66,162,61],[174,0,163,8],[174,18,163,13,"props"],[174,23,163,8],[174,24,163,19,"onHandlerStateChange"],[174,44,163,8],[174,48,164,10],[174,54,164,15,"props"],[174,59,164,10],[174,60,164,21,"onHandlerStateChange"],[174,80,164,10],[174,81,164,42,"event"],[174,86,164,10],[174,87,163,8],[175,0,166,8],[175,16,166,14,"stateEventName"],[175,30,166,28],[175,33,166,31,"stateToPropMappings"],[175,52,166,50],[175,53,166,51,"event"],[175,58,166,56],[175,59,166,57,"nativeEvent"],[175,70,166,51],[175,71,166,69,"state"],[175,76,166,50],[175,77,166,8],[177,0,167,8],[177,16,167,12],[177,23,167,19],[177,29,167,24,"props"],[177,34,167,19],[177,35,167,30,"stateEventName"],[177,49,167,19],[177,50,167,12],[177,55,167,50],[177,65,167,8],[177,67,167,62],[178,0,168,10],[178,20,168,15,"props"],[178,25,168,10],[178,26,168,21,"stateEventName"],[178,40,168,10],[178,42,168,37,"event"],[178,47,168,10],[179,0,169,9],[180,0,170,7],[180,11,162,6],[180,17,170,13],[181,0,171,8],[181,18,171,13,"props"],[181,23,171,8],[181,24,171,19,"onGestureHandlerStateChange"],[181,51,171,8],[181,55,172,10],[181,61,172,15,"props"],[181,66,172,10],[181,67,172,21,"onGestureHandlerStateChange"],[181,94,172,10],[181,95,172,49,"event"],[181,100,172,10],[181,101,171,8],[182,0,173,7],[183,0,174,5],[183,9,140,23],[185,0,140,23],[185,14,176,4,"_refHandler"],[185,25,140,23],[185,28,176,18],[185,38,176,18,"node"],[185,42,176,22],[185,44,176,26],[186,0,177,6],[186,16,177,11,"_viewNode"],[186,25,177,6],[186,28,177,23,"node"],[186,32,177,6],[188,0,179,6],[188,14,179,12,"child"],[188,19,179,17],[188,22,179,20,"React"],[188,37,179,26,"Children"],[188,45,179,20],[188,46,179,35,"only"],[188,50,179,20],[188,51,179,40],[188,57,179,45,"props"],[188,62,179,40],[188,63,179,51,"children"],[188,71,179,20],[188,72,179,6],[190,0,176,26],[190,14,180,14,"ref"],[190,17,176,26],[190,20,180,22,"child"],[190,25,176,26],[190,26,180,14,"ref"],[190,29,176,26],[192,0,181,6],[192,14,181,10,"ref"],[192,17,181,13],[192,22,181,18],[192,26,181,6],[192,28,181,24],[193,0,182,8],[193,16,182,12],[193,23,182,19,"ref"],[193,26,182,12],[193,31,182,27],[193,41,182,8],[193,43,182,39],[194,0,183,10,"ref"],[194,14,183,10,"ref"],[194,17,183,13],[194,18,183,14,"node"],[194,22,183,13],[194,23,183,10],[195,0,184,9],[195,13,182,8],[195,19,184,15],[196,0,185,10,"ref"],[196,14,185,10,"ref"],[196,17,185,13],[196,18,185,14,"current"],[196,25,185,10],[196,28,185,24,"node"],[196,32,185,10],[197,0,186,9],[198,0,187,7],[199,0,188,5],[199,9,140,23],[201,0,140,23],[201,14,190,4,"_createGestureHandler"],[201,35,140,23],[201,38,190,28],[201,48,190,28,"newConfig"],[201,57,190,37],[201,59,190,41],[202,0,191,6],[202,16,191,11,"_config"],[202,23,191,6],[202,26,191,21,"newConfig"],[202,35,191,6],[204,0,193,6,"RNGestureHandlerModule"],[204,42,193,29,"createGestureHandler"],[204,62,193,6],[204,63,194,8,"handlerName"],[204,74,193,6],[204,76,195,8],[204,82,195,13,"_handlerTag"],[204,93,193,6],[204,95,196,8,"newConfig"],[204,104,193,6],[205,0,198,5],[205,9,140,23],[207,0,140,23],[207,14,200,4,"_attachGestureHandler"],[207,35,140,23],[207,38,200,28],[207,48,200,28,"newViewTag"],[207,58,200,38],[207,60,200,42],[208,0,201,6],[208,16,201,11,"_viewTag"],[208,24,201,6],[208,27,201,22,"newViewTag"],[208,37,201,6],[210,0,203,6,"RNGestureHandlerModule"],[210,42,203,29,"attachGestureHandler"],[210,62,203,6],[210,63,203,50],[210,69,203,55,"_handlerTag"],[210,80,203,6],[210,82,203,68,"newViewTag"],[210,92,203,6],[211,0,204,5],[211,9,140,23],[213,0,140,23],[213,14,206,4,"_updateGestureHandler"],[213,35,140,23],[213,38,206,28],[213,48,206,28,"newConfig"],[213,57,206,37],[213,59,206,41],[214,0,207,6],[214,16,207,11,"_config"],[214,23,207,6],[214,26,207,21,"newConfig"],[214,35,207,6],[216,0,209,6,"RNGestureHandlerModule"],[216,42,209,29,"updateGestureHandler"],[216,62,209,6],[216,63,209,50],[216,69,209,55,"_handlerTag"],[216,80,209,6],[216,82,209,68,"newConfig"],[216,91,209,6],[217,0,210,5],[217,9,140,23],[219,0,142,6],[219,14,142,11,"_handlerTag"],[219,25,142,6],[219,28,142,25,"handlerTag"],[219,38,142,35],[219,40,142,6],[220,0,143,6],[220,14,143,11,"_config"],[220,21,143,6],[220,24,143,21],[220,26,143,6],[222,0,144,6],[222,12,144,10,"props"],[222,17,144,15],[222,18,144,16,"id"],[222,20,144,6],[222,22,144,20],[223,0,145,8],[223,14,145,12,"handlerIDToTag"],[223,28,145,26],[223,29,145,27,"props"],[223,34,145,32],[223,35,145,33,"id"],[223,37,145,26],[223,38,145,12],[223,43,145,41,"undefined"],[223,52,145,8],[223,54,145,52],[224,0,146,10],[224,18,146,16],[224,22,146,20,"Error"],[224,27,146,16],[224,51,146,46,"props"],[224,56,146,51],[224,57,146,52,"id"],[224,59,146,16],[224,86,146,10],[225,0,147,9],[227,0,148,8,"handlerIDToTag"],[227,10,148,8,"handlerIDToTag"],[227,24,148,22],[227,25,148,23,"props"],[227,30,148,28],[227,31,148,29,"id"],[227,33,148,22],[227,34,148,8],[227,37,148,35],[227,43,148,40,"_handlerTag"],[227,54,148,8],[228,0,149,7],[230,0,140,23],[231,0,150,5],[233,0,134,2],[234,0,134,2],[235,0,134,2],[235,47,212,27],[236,0,213,6,"RNGestureHandlerModule"],[236,42,213,29,"dropGestureHandler"],[236,60,213,6],[236,61,213,48],[236,66,213,53,"_handlerTag"],[236,77,213,6],[238,0,214,6],[238,14,214,10],[238,19,214,15,"_updateEnqueued"],[238,34,214,6],[238,36,214,32],[239,0,215,8,"clearImmediate"],[239,12,215,8,"clearImmediate"],[239,26,215,22],[239,27,215,23],[239,32,215,28,"_updateEnqueued"],[239,47,215,22],[239,48,215,8],[240,0,216,7],[242,0,217,6],[242,14,217,10],[242,19,217,15,"props"],[242,24,217,10],[242,25,217,21,"id"],[242,27,217,6],[242,29,217,25],[243,0,218,8],[243,19,218,15,"handlerIDToTag"],[243,33,218,29],[243,34,218,30],[243,39,218,35,"props"],[243,44,218,30],[243,45,218,41,"id"],[243,47,218,29],[243,48,218,8],[244,0,219,7],[245,0,220,5],[246,0,134,2],[247,0,134,2],[248,0,134,2],[248,44,222,24],[249,0,222,24],[251,0,223,6],[251,14,223,10,"hasUnresolvedRefs"],[251,31,223,27],[251,32,223,28],[251,37,223,33,"props"],[251,42,223,27],[251,43,223,6],[251,45,223,41],[252,0,230,8],[252,17,230,13,"_updateEnqueued"],[252,32,230,8],[252,35,230,31,"setImmediate"],[252,47,230,43],[252,48,230,44],[252,60,230,50],[253,0,231,10],[253,14,231,10],[253,20,231,14],[253,21,231,15,"_updateEnqueued"],[253,36,231,10],[253,39,231,33],[253,43,231,10],[255,0,232,10],[255,14,232,10],[255,20,232,14],[255,21,232,15,"_update"],[255,28,232,10],[256,0,233,9],[256,13,230,43],[256,14,230,8],[257,0,234,7],[259,0,236,6],[259,15,236,11,"_createGestureHandler"],[259,36,236,6],[259,37,237,8,"filterConfig"],[259,49,237,20],[259,50,238,10,"transformProps"],[259,64,238,24],[259,67,238,27,"transformProps"],[259,81,238,41],[259,82,238,42],[259,87,238,47,"props"],[259,92,238,41],[259,93,238,24],[259,96,238,56],[259,101,238,61,"props"],[259,106,237,20],[259,126,239,15],[259,131,239,20,"constructor"],[259,142,239,15],[259,143,239,32,"propTypes"],[259,152,237,20],[259,158,239,46,"customNativeProps"],[259,175,237,20],[259,178,240,10,"config"],[259,184,237,20],[259,185,236,6],[261,0,243,6],[261,15,243,11,"_attachGestureHandler"],[261,36,243,6],[261,37,243,33,"findNodeHandle"],[261,51,243,47],[261,52,243,48],[261,57,243,53,"_viewNode"],[261,66,243,47],[261,67,243,6],[262,0,244,5],[263,0,134,2],[264,0,134,2],[265,0,134,2],[265,45,246,25],[266,0,247,6],[266,14,247,12,"viewTag"],[266,21,247,19],[266,24,247,22,"findNodeHandle"],[266,38,247,36],[266,39,247,37],[266,44,247,42,"_viewNode"],[266,53,247,36],[266,54,247,6],[268,0,248,6],[268,14,248,10],[268,19,248,15,"_viewTag"],[268,27,248,10],[268,32,248,28,"viewTag"],[268,39,248,6],[268,41,248,37],[269,0,249,8],[269,17,249,13,"_attachGestureHandler"],[269,38,249,8],[269,39,249,35,"viewTag"],[269,46,249,8],[270,0,250,7],[272,0,251,6],[272,15,251,11,"_update"],[272,22,251,6],[273,0,252,5],[274,0,134,2],[275,0,134,2],[276,0,134,2],[276,34,254,14],[277,0,255,6],[277,14,255,12,"newConfig"],[277,23,255,21],[277,26,255,24,"filterConfig"],[277,38,255,36],[277,39,256,8,"transformProps"],[277,53,256,22],[277,56,256,25,"transformProps"],[277,70,256,39],[277,71,256,40],[277,76,256,45,"props"],[277,81,256,39],[277,82,256,22],[277,85,256,54],[277,90,256,59,"props"],[277,95,255,36],[277,115,257,13],[277,120,257,18,"constructor"],[277,131,257,13],[277,132,257,30,"propTypes"],[277,141,255,36],[277,147,257,44,"customNativeProps"],[277,164,255,36],[277,167,258,8,"config"],[277,173,255,36],[277,174,255,6],[279,0,260,6],[279,14,260,10],[279,15,260,11],[279,38,260,21],[279,43,260,26,"_config"],[279,50,260,11],[279,52,260,35,"newConfig"],[279,61,260,11],[279,62,260,6],[279,64,260,47],[280,0,261,8],[280,17,261,13,"_updateGestureHandler"],[280,38,261,8],[280,39,261,35,"newConfig"],[280,48,261,8],[281,0,262,7],[282,0,263,5],[283,0,134,2],[284,0,134,2],[285,0,134,2],[285,39,265,19,"updates"],[285,46,134,2],[285,48,265,28],[286,0,266,6],[286,14,266,12,"mergedProps"],[286,25,266,23],[286,46,266,31],[286,51,266,36,"props"],[286,56,266,23],[286,62,266,46,"updates"],[286,69,266,23],[286,70,266,6],[288,0,267,6],[288,14,267,12,"newConfig"],[288,23,267,21],[288,26,267,24,"filterConfig"],[288,38,267,36],[288,39,268,8,"transformProps"],[288,53,268,22],[288,56,268,25,"transformProps"],[288,70,268,39],[288,71,268,40,"mergedProps"],[288,82,268,39],[288,83,268,22],[288,86,268,55,"mergedProps"],[288,97,267,36],[288,117,269,13],[288,122,269,18,"constructor"],[288,133,269,13],[288,134,269,30,"propTypes"],[288,143,267,36],[288,149,269,44,"customNativeProps"],[288,166,267,36],[288,169,270,8,"config"],[288,175,267,36],[288,176,267,6],[290,0,272,6],[290,15,272,11,"_updateGestureHandler"],[290,36,272,6],[290,37,272,33,"newConfig"],[290,46,272,6],[291,0,273,5],[292,0,134,2],[293,0,134,2],[294,0,134,2],[294,33,275,13],[295,0,276,6],[295,14,276,10,"gestureEventHandler"],[295,33,276,29],[295,36,276,32],[295,41,276,37,"_onGestureHandlerEvent"],[295,63,276,6],[296,0,275,13],[296,28,277,56],[296,33,277,61,"props"],[296,38,275,13],[297,0,275,13],[297,14,277,14,"onGestureEvent"],[297,28,275,13],[297,43,277,14,"onGestureEvent"],[297,57,275,13],[298,0,275,13],[298,14,277,30,"onGestureHandlerEvent"],[298,35,275,13],[298,50,277,30,"onGestureHandlerEvent"],[298,71,275,13],[300,0,278,6],[300,14,278,10,"onGestureEvent"],[300,28,278,24],[300,32,278,28],[300,39,278,35,"onGestureEvent"],[300,53,278,28],[300,58,278,54],[300,68,278,6],[300,70,278,66],[301,0,282,8],[301,16,282,12,"onGestureHandlerEvent"],[301,37,282,8],[301,39,282,35],[302,0,283,10],[302,20,283,16],[302,24,283,20,"Error"],[302,29,283,16],[302,30,284,12],[302,103,283,16],[302,104,283,10],[303,0,286,9],[305,0,287,8,"gestureEventHandler"],[305,12,287,8,"gestureEventHandler"],[305,31,287,27],[305,34,287,30],[305,39,287,35,"props"],[305,44,287,30],[305,45,287,41,"onGestureEvent"],[305,59,287,8],[306,0,288,7],[306,11,278,6],[306,17,288,13],[307,0,289,8],[307,16,290,10,"onGestureHandlerEvent"],[307,37,290,31],[307,41,291,10],[307,48,291,17,"onGestureHandlerEvent"],[307,69,291,10],[307,74,291,43],[307,84,289,8],[307,86,292,10],[308,0,293,10],[308,20,293,16],[308,24,293,20,"Error"],[308,29,293,16],[308,30,294,12],[308,103,293,16],[308,104,293,10],[309,0,296,9],[310,0,297,7],[312,0,299,6],[312,14,299,10,"gestureStateEventHandler"],[312,38,299,34],[312,41,299,37],[312,46,299,42,"_onGestureHandlerStateChange"],[312,74,299,6],[313,0,275,13],[313,29,300,68],[313,34,300,73,"props"],[313,39,275,13],[314,0,275,13],[314,14,300,14,"onHandlerStateChange"],[314,34,275,13],[314,50,300,14,"onHandlerStateChange"],[314,70,275,13],[315,0,275,13],[315,14,300,36,"onGestureHandlerStateChange"],[315,41,275,13],[315,57,300,36,"onGestureHandlerStateChange"],[315,84,275,13],[317,0,301,6],[317,14,301,10,"onHandlerStateChange"],[317,34,301,30],[317,38,301,34],[317,45,301,41,"onHandlerStateChange"],[317,65,301,34],[317,70,301,66],[317,80,301,6],[317,82,301,78],[318,0,305,8],[318,16,305,12,"onGestureHandlerStateChange"],[318,43,305,8],[318,45,305,41],[319,0,306,10],[319,20,306,16],[319,24,306,20,"Error"],[319,29,306,16],[319,30,307,12],[319,103,306,16],[319,104,306,10],[320,0,309,9],[322,0,310,8,"gestureStateEventHandler"],[322,12,310,8,"gestureStateEventHandler"],[322,36,310,32],[322,39,310,35],[322,44,310,40,"props"],[322,49,310,35],[322,50,310,46,"onHandlerStateChange"],[322,70,310,8],[323,0,311,7],[323,11,301,6],[323,17,311,13],[324,0,312,8],[324,16,313,10,"onGestureHandlerStateChange"],[324,43,313,37],[324,47,314,10],[324,54,314,17,"onGestureHandlerStateChange"],[324,81,314,10],[324,86,314,49],[324,96,312,8],[324,98,315,10],[325,0,316,10],[325,20,316,16],[325,24,316,20,"Error"],[325,29,316,16],[325,30,317,12],[325,103,316,16],[325,104,316,10],[326,0,319,9],[327,0,320,7],[329,0,322,6],[329,14,322,12,"child"],[329,19,322,17],[329,22,322,20,"React"],[329,37,322,26,"Children"],[329,45,322,20],[329,46,322,35,"only"],[329,50,322,20],[329,51,322,40],[329,56,322,45,"props"],[329,61,322,40],[329,62,322,51,"children"],[329,70,322,20],[329,71,322,6],[331,0,323,6],[331,14,323,10,"grandChildren"],[331,27,323,23],[331,30,323,26,"child"],[331,35,323,31],[331,36,323,32,"props"],[331,41,323,26],[331,42,323,38,"children"],[331,50,323,6],[333,0,324,6],[333,14,325,8,"Touchable"],[333,37,325,18,"TOUCH_TARGET_DEBUG"],[333,55,325,8],[333,59,326,8,"child"],[333,64,326,13],[333,65,326,14,"type"],[333,69,325,8],[333,74,327,9,"child"],[333,79,327,14],[333,80,327,15,"type"],[333,84,327,9],[333,89,327,24],[333,113,327,9],[333,117,328,10,"child"],[333,122,328,15],[333,123,328,16,"type"],[333,127,328,10],[333,128,328,21,"name"],[333,132,328,10],[333,137,328,30],[333,143,327,9],[333,147,329,10,"child"],[333,152,329,15],[333,153,329,16,"type"],[333,157,329,10],[333,158,329,21,"displayName"],[333,169,329,10],[333,174,329,37],[333,180,325,8],[333,181,324,6],[333,183,330,8],[334,0,331,8,"grandChildren"],[334,12,331,8,"grandChildren"],[334,25,331,21],[334,28,331,24,"React"],[334,43,331,30,"Children"],[334,51,331,24],[334,52,331,39,"toArray"],[334,59,331,24],[334,60,331,47,"grandChildren"],[334,73,331,24],[334,74,331,8],[335,0,332,8,"grandChildren"],[335,12,332,8,"grandChildren"],[335,25,332,21],[335,26,332,22,"push"],[335,30,332,8],[335,31,333,10,"Touchable"],[335,54,333,20,"renderDebugView"],[335,69,333,10],[335,70,333,36],[336,0,334,12,"color"],[336,14,334,12,"color"],[336,19,334,17],[336,21,334,19],[336,40,333,36],[337,0,335,12,"hitSlop"],[337,14,335,12,"hitSlop"],[337,21,335,19],[337,23,335,21,"child"],[337,28,335,26],[337,29,335,27,"props"],[337,34,335,21],[337,35,335,33,"hitSlop"],[338,0,333,36],[338,13,333,10],[338,14,332,8],[339,0,338,7],[341,0,339,6],[341,17,339,13,"React"],[341,32,339,19,"cloneElement"],[341,44,339,13],[341,45,340,8,"child"],[341,50,339,13],[341,52,341,8],[342,0,342,10,"ref"],[342,12,342,10,"ref"],[342,15,342,13],[342,17,342,15],[342,22,342,20,"_refHandler"],[342,33,341,8],[343,0,343,10,"collapsable"],[343,12,343,10,"collapsable"],[343,23,343,21],[343,25,343,23],[343,30,341,8],[344,0,344,10,"onGestureHandlerEvent"],[344,12,344,10,"onGestureHandlerEvent"],[344,33,344,31],[344,35,344,33,"gestureEventHandler"],[344,54,341,8],[345,0,345,10,"onGestureHandlerStateChange"],[345,12,345,10,"onGestureHandlerStateChange"],[345,39,345,37],[345,41,345,39,"gestureStateEventHandler"],[346,0,341,8],[346,11,339,13],[346,13,347,8,"grandChildren"],[346,26,339,13],[346,27,339,6],[347,0,349,5],[348,0,134,2],[349,0,134,2],[350,0,134,2],[350,6,135,24,"React"],[350,21,135,30,"Component"],[350,30,134,2],[352,0,135,8,"Handler"],[352,4,135,8,"Handler"],[352,11,134,2],[352,12,136,11,"displayName"],[352,23,134,2],[352,26,136,25,"handlerName"],[352,37,134,2],[353,0,135,8,"Handler"],[353,4,135,8,"Handler"],[353,11,134,2],[353,12,138,11,"propTypes"],[353,21,134,2],[353,24,138,23,"propTypes"],[353,33,134,2],[354,0,351,2],[354,11,351,9,"Handler"],[354,18,351,2],[355,0,352,1]],"functionMap":{"names":["<global>","findNodeHandle","<anonymous>","UIManager.setJSResponder","UIManager.clearJSResponder","isConfigParam","filterConfig","Object.keys.forEach$argument_0","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#_onGestureHandlerEvent","Handler#_onGestureHandlerStateChange","Handler#_refHandler","Handler#_createGestureHandler","Handler#_attachGestureHandler","Handler#_updateGestureHandler","Handler#componentWillUnmount","Handler#componentDidMount","setImmediate$argument_0","Handler#componentDidUpdate","Handler#_update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;ACW;CDG;sCE+B,QF;0CEC,QF;2BGE;CHG;6BIC;CJG;AKK;CLS;AME;kCCE;GDa;CNE;AQE;0BCM,wBD,SE,gBF;MCK;UDG;YEE,4BF;CRC;AWE;kBCC;qBCI,4BD;GDC;CXE;ecU;ECO;ICK;KDU;6BEE;KFO;mCGE;KHa;kBIE;KJY;4BKE;KLQ;4BME;KNI;4BOE;KPI;IQE;KRQ;ISE;4CCQ;SDG;KTW;IWE;KXM;IYE;KZS;IaE;KbQ;IcE;Kd0E;GDC;CdE"}},"type":"js/module"}]}